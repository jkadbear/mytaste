#!/usr/bin/env bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# prompt successful message
echo_succ() {
    echo -e "${GREEN}*$1*${NC}"
}

# prompt failed message
echo_fail() {
    echo -e "${RED}*$1*${NC}"
}

# prompt info message
echo_info() {
    echo -e "${YELLOW}*$1*${NC}"
}

exist_cmd() {
    if type $1 >/dev/null 2>&1; then
        return 0
    else
        return 1
    fi
}

prompt() {
    echo
    echo "=============================================="
    echo "What do you want to do? (ENTER q to exit)"
    echo "1. copy ssh keys to another machine"
    echo "2. prepare *nix working environment"
    echo "3. prepare *nix working environment(on server)"
    echo "4. back-up files"
}

run_sel() {
    if [[ $1 == "1" ]]; then
        if [[ ! -e ~/.ssh/id_rsa ]]; then
            echo_info "No ssh key detected."
            while true; do
                read -p "Auto-generate? [y/n]" yn
                case $yn in
                    [Yy]* ) ssh-keygen -t rsa -P ""; break;;
                    [Nn]* ) echo_info "Try \`ssh-keygen -t rsa -P \"\"\`";
                            echo_info " or \`ssh-keygen -t rsa -b 4096 -C \"your-email\"\`";
                            exit 0;;
                    * )     echo "Please answer y or n.";;
                esac
            done
        fi
        if [[ "$OSTYPE" == "OSX" ]] && ! exist_cmd ssh-copy-id; then
            $INSTALL_PREFIX ssh-copy-id
        fi
        echo "Please input username(default: localname):"
        read username
        username=${username:-`whoami`}
        echo "Please input remote-host-addr:"
        read remote_host
        echo "ssh-copy-id -i ~/.ssh/id_rsa.pub $username@$remote_host"
        ssh-copy-id -i ~/.ssh/id_rsa.pub $remote_host
    elif [[ $1 == "2" || $1 == "3" ]]; then
        # install git
        if ! exist_cmd git; then
            echo "installing git..."
            $INSTALL_PREFIX git
        fi
        # install vim
        if  ! exist_cmd vim; then
            echo "installing vim..."
            $INSTALL_PREFIX vim 
        fi
        # install z-shell
        if  ! exist_cmd zsh; then
            echo "installing zsh..."
            $INSTALL_PREFIX zsh 
        fi
        # install oh-my-zsh
        if [[ ! -d ~/.oh-my-zsh ]]; then
            wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
            # do not enter zsh environment instantly
            sed -i.bak '/env zsh/d' install.sh
            sh install.sh
            rm install.sh install.sh.bak
        fi
        # install Tmux
        if  ! exist_cmd tmux; then
            echo "installing tmux..."
            $INSTALL_PREFIX tmux
        fi
        # apply configuration to zsh, vimperatorrc, vim, tmux
        if [[ ! -d ~/chief_config ]]; then
            cd ~
            if [[ $OSTYPE == "Ubuntu" ]]; then
                if [[ $sel == "3" ]]; then
                    git clone -b ubuntu-server https://git.ustclug.org/jkad/chief_config.git
                else
                    git clone -b ubuntu https://git.ustclug.org/jkad/chief_config.git
                fi
            else
                git clone https://git.ustclug.org/jkad/chief_config.git
            fi
            cd chief_config
            cp ./zshrc ~/.zshrc
            cp ./vimperatorrc ~/.vimperatorrc
            cp ./vimrc ~/.vimrc 
            cp ./tmux.conf ~/.tmux.conf 
        fi
        echo_succ "Successfully done"
        echo_info "Try 'chsh -s /bin/zsh' and 'env zsh'"
    elif [[ $1 == "q" ]]; then
        exit 1
    elif [[ $1 == "4" ]]; then
        echo_info "[DEFAULT]: zsh ~/.mytaste/backup.sh (continue? [y/n])"
        read cho
        if [[ $cho == "y" || $cho == "Y" || $cho == "" ]]; then
            zsh ~/.mytaste/backup.sh
        fi
    else
        echo_fail "Illegal input!"
    fi
}

# detect OS type
if [[ $(uname) = "Darwin" ]]; then
    OSTYPE="OSX"
    if ! exist_cmd brew; then
        # install Homebrew
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi
    INSTALL_PREFIX="brew"
elif [[ $(cat /etc/issue | head -n 1 | cut -c1-6) == "Ubuntu" ]]; then
    OSTYPE="Ubuntu"
    INSTALL_PREFIX="sudo apt-get install -y"
else
    echo_fail "Unsupported OS Type!"
    exit 1
fi

if [[ $# > 0 ]]; then
    run_sel $1
else
    while true; do
        prompt
        read sel
        run_sel $sel
    done
fi
